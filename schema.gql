# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Admin {
  email: String!
  fullname: String!
  id: ID!
  is_active: Boolean!
  is_creator: Boolean!
  password: String!
  phone: String
}

type Advertisement {
  dermantin: Dermantin!
  discount_percent: Float!
  end_date: String!
  id: ID!
  start_date: String!
  status: AdvertisementStatus!
  type: AdvertisementType!
}

enum AdvertisementStatus {
  ACCEPTED
  PROCESSING
  REJECTED
}

enum AdvertisementType {
  DISCOUNTED
  STANDART
}

type Category {
  dermantin: [Dermantin!]!
  id: ID!
  logo: String
  name: String!
}

type Chat {
  id: ID!
  store: Store!
  user: User!
}

input CreateAdminDto {
  email: String!
  fullname: String!
  password: String!
  phone: String
}

input CreateAdvertisementDto {
  discount_percent: Float!
  end_date: String!
  start_date: String!
  status: AdvertisementStatus!
  type: AdvertisementType!
}

input CreateChatDto {
  storeId: Int!
  userId: Int!
}

input CreateHistoryDto {
  dermantinId: Int!
  userId: Int!
}

input CreateImageDto {
  image_url: String!
  is_main: Boolean!
}

input CreateMessageDto {
  chatId: Int!
  is_read: Boolean! = false
  text: String!
}

input CreateOrderDto {
  dermantinId: Int!
  remaining_price: Float!
  storeId: Int!
  total_price: Float!
  userId: Int!
}

input CreateRequestDto {
  status: RequestStatus! = PENDING
  text: String!
  userId: Float!
}

input CreateReviewDto {
  dermantinId: Int!
  ranking: Float!
  userId: Int!
}

input CreateStoreDto {
  description: String!
  logo_url: String!
  managerId: Int!
  name: String!
  region: StoreRegion!
  status: StoreStatus!
}

input CreateUserDto {
  confirm_password: String!
  email: String!
  full_name: String!
  lang: Language!
  password: String!
  phone: String
  region: Region!
  role: UserRole! = USER
}

type Dermantin {
  ad: [Advertisement!]!
  category: Category!
  class: DermantinClass!
  histories: [History!]!
  id: ID!
  images: [Image!]!
  name: String!
  price: Float!
  rating: Float!
}

enum DermantinClass {
  BASIC
  PREMIUM
}

type History {
  dermantin: Dermantin!
  id: ID!
  user: User!
}

type Image {
  dermantin: Dermantin!
}

enum Language {
  RUSSIAN
  UZBEK
}

type Message {
  chat: Chat!
  id: Int!
  is_read: Boolean!
  text: String!
}

type Mutation {
  createAdmin(createAdmin: CreateAdminDto!): Admin!
  createAdvertisement(createAdvertisement: CreateAdvertisementDto!): Advertisement!
  createChat(createChat: CreateChatDto!): Chat!
  createDermantin(createDermantin: ID!): Dermantin!
  createHistory(createHistory: CreateHistoryDto!): History!
  createImage(createImage: CreateImageDto!): Image!
  createMessage(createMessageDto: CreateMessageDto!): Message!
  createOrder(createOrder: CreateOrderDto!): Order!
  createRequest(createRequest: CreateRequestDto!): Request!
  createReview(createReview: CreateReviewDto!): Review!
  createStore(createStore: CreateStoreDto!): Store!
  createUser(createUser: CreateUserDto!): User!
  remove(id: ID!): Float!
  removeAdmin(id: ID!): String!
  removeAdvertisement(id: ID!): Boolean!
  removeChat(id: ID!): String!
  removeHistory(id: ID!): String!
  removeImage(id: ID!): String!
  removeMessage(id: Int!): Boolean!
  removeOrder(id: ID!): String!
  removeRequest(id: ID!): String!
  removeReview(id: ID!): String!
  removeStore(id: ID!): String!
  removeUser(id: ID!): String!
  update(id: ID!, updateDermantin: UpdateDermantinDto!): Dermantin!
  updateAdmin(id: ID!, updateAdmin: UpdateAdminDto!): Admin!
  updateAdvertisement(id: ID!, updateAdvertisement: UpdateAdvertisementDto!): Advertisement!
  updateChat(id: ID!, updateChat: UpdateChatDto!): Chat!
  updateHistory(id: ID!, updateHistory: UpdateHistoryDto!): History!
  updateImage(id: ID!, updateImage: UpdateImageDto!): Image!
  updateMessage(id: Int!, updateMessageDto: UpdateMessageDto!): Message!
  updateOrder(id: ID!, updateOrder: UpdateOrderDto!): Order!
  updateRequest(id: ID!, updateRequest: UpdateRequestDto!): Request!
  updateReview(id: ID!, updateReview: UpdateReviewDto!): Review!
  updateStore(id: ID!, updateStore: UpdateStoreDto!): Store!
  updateUser(id: ID!, updateUser: UpdateUserDto!): User!
}

type Order {
  dermantin: Dermantin!
  id: ID!
  remaining_price: Float!
  store: Store!
  total_price: Float!
  user: User!
}

type Query {
  findAllAdmins: [Admin!]!
  findAllAdvertisement: [Advertisement!]!
  findAllChats: [Chat!]!
  findAllDermantin: [Dermantin!]!
  findAllHistories: [History!]!
  findAllImages: [Image!]!
  findAllOrders: [Order!]!
  findAllRequests: [Request!]!
  findAllReviews: [Review!]!
  findAllStores: [Store!]!
  findAllUsers: [User!]!
  findOne(id: ID!): Dermantin!
  findOneAdmin(id: ID!): Admin!
  findOneAdvertisement(id: ID!): Advertisement!
  findOneChat(id: ID!): Chat!
  findOneHistory(id: ID!): History!
  findOneImage(id: ID!): Image!
  findOneOrder(id: ID!): Order!
  findOneRequest(id: ID!): Request!
  findOneReview(id: ID!): Review!
  findOneStore(id: ID!): Store!
  findOneUser(id: ID!): User!
  getAllMessages: [Message!]!
  getMessageById(id: Int!): Message!
}

enum Region {
  ANDIJAN
  BUKHARA
  FERGANA
  JIZZAKH
  KARAKALPAKSTAN
  KASHKADARYA
  KHOREZM
  NAMANGAN
  NAVOI
  SAMARKAND
  SURKHANDARYA
  SYRDARYA
  TASHKENT
}

type Request {
  id: Float!
  status: RequestStatus!
  text: String!
  user: User!
}

enum RequestStatus {
  ACCEPTED
  PENDING
  REJECTED
}

type Review {
  dermantin: Dermantin!
  id: Int!
  ranking: Float!
  user: User!
}

type Store {
  chats: [Chat!]!
  description: String!
  id: ID!
  logo_url: String!
  manager: User!
  name: String!
  region: StoreRegion!
  status: StoreStatus!
}

enum StoreRegion {
  ANDIJAN
  BUKHARA
  FERGANA
  JIZZAKH
  KASHKADARYA
  KHOREZM
  NAMANGAN
  NAVOI
  SAMARKAND
  SURKHANDARYA
  SYRDARYA
  TASHKENT
}

enum StoreStatus {
  CONFIRMED
  PENDING
  REJECTED
}

input UpdateAdminDto {
  email: String!
  fullname: String!
  password: String!
  phone: String
}

input UpdateAdvertisementDto {
  discount_percent: Float!
  end_date: String!
  start_date: String!
  status: AdvertisementStatus!
  type: AdvertisementType!
}

input UpdateChatDto {
  storeId: Int!
  userId: Int!
}

input UpdateDermantinDto {
  class: DermantinClass!
  name: String!
  price: Float!
  rating: Float!
}

input UpdateHistoryDto {
  dermantinId: Int!
  userId: Int!
}

input UpdateImageDto {
  image_url: String
  is_main: Boolean
}

input UpdateMessageDto {
  chatId: Int!
  is_read: Boolean! = false
  text: String!
}

input UpdateOrderDto {
  dermantinId: Int!
  remaining_price: Float!
  storeId: Int!
  total_price: Float!
  userId: Int!
}

input UpdateRequestDto {
  status: RequestStatus! = PENDING
  text: String!
  userId: Float!
}

input UpdateReviewDto {
  dermantinId: Int!
  ranking: Float!
  userId: Int!
}

input UpdateStoreDto {
  description: String!
  logo_url: String!
  managerId: Int!
  name: String!
  region: StoreRegion!
  status: StoreStatus!
}

input UpdateUserDto {
  email: String
  name: String
  password: String
  phone: String
}

type User {
  activation_link: String!
  email: String!
  full_name: String!
  histories: [History!]!
  id: ID!
  is_verified: Boolean!
  lang: Language!
  password: String!
  phone: String
  refresh_token: String!
  region: Region!
  requests: [Request!]!
  role: UserRole!
  stores: [Store!]!
}

enum UserRole {
  MANAGER
  USER
}